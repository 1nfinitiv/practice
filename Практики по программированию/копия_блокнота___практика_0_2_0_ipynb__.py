# -*- coding: utf-8 -*-
"""Копия блокнота ""Практика 0.2.0 .ipynb""

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ISfkpkVVgBKadxlv50ODgjdjw1p1V3Fy

Напишите свое ФИО:
"""

Казунин Константин Дмитриевич

"""# Основы

Задание 1: Напиши программу, выводящую на экран сообщение "Привет, мир!"
"""



print('Привет, мир!')

"""Задание 2: Напиши программу которая запрашивает имя пользователя и выводит сообщение:

`Привет, <Имя пользователя>`
"""

name = input()
print('Привет,', name)

"""Задание 3: Напиши программу определяющую является ли число четным или нечетным:

Пример:

`Введите число:` 2

`Ваше число четное!`
"""

num = int(input())
if num%2==0:
  print('Ваше число четное!')
else:
  print('Ваше число не четное!')



"""Задание 4: Напишите программу которая запрашивает длинну и ширину прямоугольника и выводит его площадь:



`Введите длинну прямоугольника:`

`Введите ширину прямоугольника:`

`Площадь прямоугольника: `


"""

dl = int(input())
shr = int(input())
print(dl*shr)

"""Задание 5: Напишите программу, которая будет вычислять среднее арифметическое введенных чисел"""

num=input('Введите числа')
num_list = list(map(int,num))
print(sum(num_list)/len(num_list))

"""Задание 6: Напиши программу, которая бы определяла является ли год високосным"""

year=int(input())
if year%4==0:
  print('Год високосный')
else:
  print('Год не високосный')

"""Задание 7: Необходимо создать простой калькулятор, который позволяет пользователю выбрать одну из четырёх операций (+, -, *, /), ввести два числа и получить результат выполнения операции."""

znak = input('Введите знак(+, -, *, /)')
num1=int(input('Число 1'))
num2 = int(input('Число 2'))
if znak == '+':
  print(num1+num2)
elif znak == '-':
  print(num1-num2)
elif znak == '*':
  print(num1*num2)
else:
  print(num1/num2)

"""# Практика 0.2.1

**Шахматы**

Даны стартовые и конечные координаты, а также фигура

Необходимо определить, может ли заданная фигура так ходить?
"""

def king_move(start, end):
    return max(abs(start[0] - end[0]), abs(start[1] - end[1])) == 1
def pawn_move(start, end):
    return ((start[0] == end[0] or start[1] == end[1])) and (max(abs(start[0] - end[0]), abs(start[1] - end[1])) == 1) and end[1]>start[1]

def queen_move(start, end):
    return (start[0] == end[0] or start[1] == end[1] or abs(start[0] - end[0]) == abs(start[1] - end[1]))

def bishop_move(start, end):
    return abs(start[0] - end[0]) == abs(start[1] - end[1])

def rook_move(start, end):
    return (start[0] == end[0] or start[1] == end[1])

def knight_move(start, end):
    return (abs(start[0] - end[0]), abs(start[1] - end[1])) in [(2, 1), (1, 2)]

def move(piece, start, end):
    start = (int(start[0]), int(start[1]))
    end = (int(end[0]), int(end[1]))
    if piece == 'king':
        return king_move(start, end)
    elif piece == 'queen':
        return queen_move(start, end)
    elif piece == 'bishop':
        return bishop_move(start, end)
    elif piece == 'rook':
        return rook_move(start, end)
    elif piece == 'knight':
        return knight_move(start, end)
    elif piece == 'pawn':
        return pawn_move(start, end)
    else:
        return False

start_kord = input("Введите стартовые координаты (x, y) через запятую: ").split(',')
end_kord = input("Введите конечные координаты (x, y) через запятую: ").split(',')
piece = input("Введите тип фигуры (king, queen, bishop, rook, knight, pawn): ")
if (int(start_kord[0])<=8 and int(start_kord[1])<=8) and (int(end_kord[0])<=8 and int(end_kord[1])<=8):
    if move(piece, start_kord, end_kord):
        print(f"{piece} может двигаться из {start_kord} в {end_kord}.")
    else:
        print(f"{piece} не может двигаться из {start_kord} в {end_kord}.")
else:
    print('Введите коректные координаты')

"""# Практика 0.2.2

**Цифра на определенном месте:**

Последовательно записан натуральный ряд чисел.

Какая цифра стоит в N позиции
"""

num=input('Введите числа')
num_list = list(map(int,num))
print(num_list)

"""# Практика 0.2.3


Возьмите код из задания 7 и улучшите ваш калькулятор следующим образом:

Пользователь вводит строку вида:

(5+5)*5 - данная строка содержит в себе математическое выражение, а также скобки

Ваша программа должная понять что за математическое выражение записано, проверить верно ли оно записано (пример неверного заполнения: (5(+)5)*5, а также расчитать его в соотвествии с правилами математики
"""

res = eval(input('Введите выражение: '))
print(res)

