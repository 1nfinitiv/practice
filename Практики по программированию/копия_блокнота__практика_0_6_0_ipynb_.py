# -*- coding: utf-8 -*-
"""Копия блокнота "Практика 0.6.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1umCYU1rXh2UPQlsQNchhDRV5sZzM1urp

---

# **Дисклеймер**

В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики

---

# Задание 1

**Задача:**

Напишите функцию очищающий список от дубликтов


*Запрещено:*

*   Использовать set() или готовые функции очищающие список от дубликатов

Вввод:

```
apple banana apple 1 3 4 4 5
```


Вывод:

```
apple banana 1 3 4 5
```
"""

def clear(m):
    count={}
    new_m = []
    for i in m:
        if i in count:
            count[i]+=1
        else:
            count[i]=1
    for k in count.keys():
        new_m.append(k)
    return new_m


m=['apple', 'banana', 'apple', 1, 3, 4, 4, 5]
print(clear(m))

"""# Задание 1

**Задача:**

Напишите функцию очищающий список от дубликтов


*Запрещено:*

*   Использовать set() или готовые функции очищающие список от дубликатов

Вввод:

```
apple banana apple 1 3 4 4 5
```


Вывод:

```
apple banana 1 3 4 5
```

# Задание 2

**Задача:**

Написать функцию для нахождения простых чисел в диапазоне

Ввод:

```
10, 50
```

Вывод:

```
11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47
```
"""

def prime(left,right):
    m = []
    for i in range(left,right+1):
        k=0
        for j in range(2,i):
            if i%j==0:
                k+=1
        if k==0:
            m.append(i)
    return m

left = 10
right = 50
print(prime(left,right))

"""# Задание 3

Напишите функцию для объединения двух списков (список ключей и список значении) в словарь

*Запрещено:*

*   Использования готовых функции для объединения списков (пример: zip() )

Дано:

```
keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]
```

Вывод:
```
{'a': 1, 'b': 2, 'c': 3, 'e': 4}
```



"""

def union(keys,values):
    dict = {}
    for i in range(len(keys)):
        dict[keys[i]]=values[i]
    return dict


keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]
print(union(keys,values))

"""# Задание 4

Напишите функцию(ии) для подсчета статистических параметров:
*   Сумму
*   Среднее арифметическое
*   Медиану
*   Моду


*Запрещено:*

*   sum()
*   sorted()
*   и других функции предоставляющих готовое решение задания

Дано:

```
numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]

```

Вывод:
```
{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}
```

"""

def summ(numbers,dict):
    s = 0
    for i in numbers:
        s+=i
    dict['sum']=s


def mean(numbers,dict):
    s = 0
    for i in numbers:
        s+=i
    dict['mean']=s/len(numbers)

def mode(numbers,dict):
    count={}
    for i in numbers:
        if i in count:
            count[i]+=1
        else:
            count[i]=1
    maxx = max(count, key = count.get)
    dict['mode']=maxx


def median(numbers,dict):
    med = len(numbers)//2
    dict['median']=numbers[med]


numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]
dict={}
median(numbers,dict)
summ(numbers,dict)
mean(numbers,dict)
mode(numbers,dict)
print(dict)

"""# Задание 5

На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.

*Запрещено:*

*   len()

Дано:

```
Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.

```

Вывод:
```
Самое длинное слово с номером 5: обязательны
```
"""

sent = 'Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.'
m = sent.split(' ')
dict = {}
for i in m:
    k = 0
    for j in i:
        k+=1
    dict[i]=k

print(max(dict,key = dict.get))

"""# Задание 6

Напишите программу, для управления оценками студентов, со следующими функциями:

* Добавление информации о студенте и его оценках.
* Подсчет среднего балла студента.
* Получение списка всех студентов с их средними баллами.
* Поиск студента по имени и вывод его оценок и среднего балла.




"""

def add_info(main_dict):
    name = input('Введите имя: ')
    marks = input('Введите оценки студента: ').split(' ')
    for i in marks:
        int(i)
    main_dict[name]=marks
    print(main_dict)


def averange():
    name = input('Введите имя: ')



def all_students():
    pass


def student():
    pass


main_dict = {}
add_info(main_dict)

"""# Задание 7


**Задача:**

Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.

Ключевые особенности:

*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос
*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.
*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.
*  Реализуйте функцию добавления нового вопроса
*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса

"""

import random

def display_question(question):
    print(question)
    user_answer = input("Введите ответ: ")
    return user_answer

def check_answer(user_answer, correct_answer):
    global scores
    if user_answer.lower() == correct_answer.lower():
        scores += 1
        print("Правильно!")
    else:
        print("Неправильно. Правильный ответ: " + correct_answer)

def add_question(new_question, correct_answer):
    questions[new_question] = correct_answer

def shuffle_questions():
    shuffled_questions = list(questions.keys())
    random.shuffle(shuffled_questions)
    return shuffled_questions


def run_quiz():
    for question in shuffle_questions():
        user_answer = display_question(question)
        correct_answer = questions[question]
        check_answer(user_answer, correct_answer)
    print("Ваш итоговый балл: " + str(scores) + "/" + str(len(questions)))


questions = {
    "В каком месяце 28 дней?": "Во всех",
    "Сколько дней в неделе?": "7",
    "Самый популярный вид спорта": "Футбол",
}

scores = 0

# Добавление нового вопроса
add_question("Сколько лет длилась столетняя война?", "116")

# Запуск викторины
run_quiz()