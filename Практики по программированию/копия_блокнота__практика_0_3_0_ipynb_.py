# -*- coding: utf-8 -*-
"""Копия блокнота "Практика 0.3.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FVVWHfroFyxPJ_46k4ydyrXDQrkom0MF
"""



"""ФИО"""





"""**Во всей практике нельзя применять библиотеки предоставляющие готовые решения!**

# **Задача 1.**

Типы данных Напишите программу на Python, которая принимает список чисел в качестве входных данных от пользователя, а затем выводит сумму, среднее значение и максимальное значение из списка.

***Нельзя использовать: len(), min(), max(), average(), sum()***

Дано:
```
1 2 3 4 5 6 7
```
Вывод:

```
Сумма чисел: 28
Среднее арифм.: 4.0
Максимальное значение: 7
```
"""

entered_list = input("Введите список чисел, разделенных пробелом: ").split()
num_list = [int(i) for i in entered_list]
summ = 0
kol=0
max_znach=-10**10
for i in num_list:
    summ += i
    kol += 1
    if i>max_znach:
        max_znach = i
sr_znach = summ/kol
print('Сумма чисел:',summ)
print('Среднее арифм.:',sr_znach)
print('Максимальное значение:', max_znach)

"""# **Задача 2.**

Напишите программу на Python, которая принимает список слов в качестве входных данных от пользователя, а затем распечатывает список в обратном порядке.

Ввод:

```
апельсин мандарин яблоко
```

Вывод:

```
яблоко мандарин апельсин
```
"""

entered_list = input("Введите список чисел, разделенных пробелом: ").split()
num_list = [i for i in entered_list]
new_list = []
for i in range(len(num_list)-1,-1,-1):
    new_list.append(num_list[i])
print(new_list)

"""# **Задача 3**

Простой чат-бот
Создайте простого чат-бота, который отвечает на основные запросы пользователей. Программа должна использовать условные выражения для определения намерений пользователя и последующего соответствующего ответа.

Чат бот может:

- помогать складывать числа
- подсказывать фильм, музыку и тд (из заранее созданного списка)
- создавать список дел (а также выводить его, обновлять, очищать)

Интерфейс чат-бота на ваше усмотрение, это могут быть как заранее определенные команды, так и к примеру вызов команды по номеру

*Реализовать без использования функций*

Пример:

Ввод:

```
Олег, какую мызыку посоветуешь?
```

Вывод:

```
Я бы посоветовал вам: Led Zeppelin Stairway to Heaven
```
"""

print("Привет! Я - простой чат-бот. Чем могу помочь?")

def calculate(numbers):
    return sum(numbers)

def recommend(category):
    if category == "фильм":
        return "Я бы посоветовал вам: 'Интерстеллар'."
    elif category == "музыка":
        return "Я бы посоветовал вам: Led Zeppelin Stairway to Heaven"
    else:
        return "Извините, я не могу порекомендовать ничего в этой категории."

def to_do_list():
    to_do = []
    while True:
        action = input("Что вы хотите добавить, удалить, просмотреть или очистить в списке дел? ")
        if action == "добавить":
            task = input("Введите новую задачу: ")
            to_do.append(task)
            print("Задача добавлена в список.")
        elif action == "удалить":
            task = input("Введите задачу для удаления: ")
            if task in to_do:
                to_do.remove(task)
                print("Задача удалена из списка.")
            else:
                print("Такой задачи нет в списке.")
        elif action == "просмотреть":
            print("Ваш список дел:")
            for task in to_do:
                print(task)
        elif action == "очистить":
            to_do.clear()
            print("Список дел очищен.")
        else:
            print("Извините, я не могу понять ваш запрос. Попробуйте еще раз.")

while True:
    user_input = input("Введите ваш запрос: ")


    if "+" in user_input:
        numbers = [int(x) for x in user_input.split() if x.isdigit()]
        result = calculate(numbers)
        print("Результат сложения чисел:", result)
    elif "фильм" in user_input or "музыка" in user_input:
        category = user_input.split()[-1]
        recommendation = recommend(category)
        print(recommendation)
    elif "список" in user_input or "дела" in user_input:
        to_do_list()
    elif user_input == "выход":
        print("До свидания! Надеюсь, я вам помог.")
        break
    else:
        print("Извините, я не могу понять ваш запрос. Попробуйте еще раз.")

"""# **Задача 4.**

Камень, ножницы, бумага

Создайте игру в Камень, ножницы, бумагу, в которой пользователь может играть против компьютера. Программа должна запросить выбор пользователя, а затем сгенерировать выбор компьютера. Затем программа должна определить победителя на основе правил игры.

**Этап 1:**

Определение победителя

**Этап 2:**
  
Игра до 3 побед


Ввод для "Этап 1":

```
Камень
```

Вывод:

```
Компьютер: Ножницы
Игрок: Камень
Победа: Игрок
```
"""

point_pers = 0
point_comp = 0
while point_pers < 3 and point_comp < 3:
    mass = ['Камень','Ножницы', 'Бумага']
    choice_comp = random.choice(mass)
    choice_pers = input('Введите (Камень, Ножницы или Бумага):')
    print('Игрок выбрал:', choice_pers)
    print('Компьютер выбрал:', choice_comp)
    win_comb = [('Камень','Ножницы'),('Ножницы','Бумага'),('Бумага','Камень')]
    if choice_pers == choice_comp:
        print('Ничья')
        print(f'Счет игрока: {point_pers} Счет компьютера: {point_comp}')
    elif (choice_pers, choice_comp) in win_comb:
        print('Победа: Игрок')
        point_pers += 1
        print(f'Счет игрока: {point_pers} Счет компьютера: {point_comp}')
    else:
        print('Победа: Компьютер')
        point_comp += 1
        print(f'Счет игрока: {point_pers} Счет компьютера: {point_comp}')
if point_pers > point_comp:
    print('Победа по 3 партиям: Игрок')
else:
    print('Победа по 3 партиям: Компьютер')

"""# **Задача 5.**

Создайте игру "Палач" или "Виселица", в которой пользователь должен угадать слово, предлагая буквы. Программа должна выбрать случайное слово, а затем разрешить пользователю угадывать буквы. После каждого угадывания программа должна сообщать пользователю, есть ли в слове буква или нет.

**Этап 1**
Создать саму игру

**Этап 2:**
Ввести подсчет количества очков и ограничения на попытки

**Этап 3:** Добавить возможность сразу угадать слово
"""

list_word = ['телевизор','машина','квартира']
word = random.choice(list_word)
sec = ['*']*len(word)
point = 5
while point >0:
    letter = input('Введите букву или слово:')
    if letter in word:
        if letter == word:
            print('Вы угадали!')
            break
        else:
            print('Вы ошиблись')
            point-=1
            print(f'У вас осталось {point} жизней')
            print(sec)
            break

        print('Угадали!')
        for i in range(len(word)):
            if letter == word[i]:
                sec[i]=letter
        print(f'У вас осталось {point} жизней')
        print(sec)
    else:
        print('Вы ошиблись')
        point-=1
        print(f'У вас осталось {point} жизней')
        print(sec)
    if '*' not in sec:
        print('Вы угадали!')
        print(sec)
        break

"""# **Дополнительно: Задача 6.**

**Цифра на определенном месте:**

Последовательно записан натуральный ряд чисел.

Какая цифра стоит в N позиции


Вввод:

```
Введите номер позиции: 1234567890
```

Вывод:

```
8
```
"""

